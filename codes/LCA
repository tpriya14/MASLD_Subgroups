
library(ggplot2)
library(olsrr)
library("poLCA")
library(scatterplot3d)
library(MASS)
library(dplyr)
library(dplyr); 
library(tidyr); 
library(purrr) # Data wrangling
library(ggplot2);
library(stringr) # Plotting
library(tidyfit) # Model fitting
library(table1)
library(RcppArmadillo)
library(tidyLPA)
library(BranchGLM)
library(MASS)
run_blrt <- FALSE
library(mlr3misc)

pkgs_overall <- c("data.table", "reshape2", "ggplot2", "ggrepel", "scales", "paletteer")
pkgs_lca <- c("poLCA", "networkD3", "scatterpie", "corrplot", "tidyLPA")
sapply(pkgs_overall, require, character.only = TRUE, quietly = TRUE)

setwd("D:/Mayo Clinic/Tahmina_Secured//NAFLD_LCA_FOLD/MAYO_BIOBANK/")

# Prepare your dataset with baseline demographic and clinical variables (Cases)
final_all <-  read.delim("data.txt", sep="\t", header=TRUE)


##Stepwise For backward#######
vari_lca <- c("PATIENT_GENDER_NAME",  "Obesity1", "Hyperlipidemia1", "MetS1","Hypertension1", 
              "ALT_C",  "AST_C","BMI_C","HDL_C","Depression1","Migraine1",
              "CKD1", "ALP_C"
)


### Run poLCA
out_path <- "D:/Mayo Clinic/Tahmina_Secured//NAFLD_LCA_FOLD/MAYO_BIOBANK/result/"
f_lca <- eval(parse(text = paste0("as.formula(cbind(", paste(vari_lca, collapse = ", "), ") ~ 1)"))) #caus.death * year.diag
n_start <- 1
n_end <- 10
for (i in n_start:n_end) {
  mi_start <- poLCAParallel::poLCA(formula = f_lca, data = dat_lca_100, nclass = i, maxiter = 1000, nrep = 30, graph = FALSE, calc.se = TRUE, verbose = FALSE)
  vprobs.start <- poLCA.reorder(mi_start$probs.start, order(mi_start$P, decreasing = TRUE))
  mi <-poLCAParallel::poLCA(formula = f_lca, data = dat_lca_100, nclass = i, maxiter = 1000, probs.start = vprobs.start, graph = FALSE, calc.se = TRUE, verbose = FALSE)
  save(mi_start, mi, file = paste0(out_path, "lca_m", i, ".RData"))
}

save(dat_lca_100, file = paste0(out_path, "dat_lca_100.RData"))

p_use <- "p_lrt"
vy_thres <- 0.5

### LCA performance
res_lca <- data.table()
for (j in n_start:n_end) {
  load(paste0(out_path, "lca_m", j, ".RData"))
  prop <- table(mi$predclass)/mi$Nobs*100
  pre_prop <- mi$P*100
  
  val_post <- apply(mi$posterior, 1, max)
  sum_post <- summary(val_post)
  if (j == 1) {
    mean_post = 1
  } else {
    dat_post <- data.table(posterior = val_post, class = mi$predclass)
    mean_post <- dat_post[, mean(posterior), by = "class"]$V1
  }
  
  nadj=(mi$Nobs+2)/24
  sabic = -2 * mi$llik + mi$npar * log(nadj)
  
  entropy<-function (p) sum(-p*log(p))
  error_prior<-entropy(mi$P) # class proportions model 2
  error_post<-mean(apply(mi$posterior ,1, entropy),na.rm = TRUE)
  entropy_val<-round(((error_prior-error_post) / error_prior),3)
  
  if (file.exists(paste0(out_path, "lca_m", j, ".txt"))) {
    p_file <- readLines(paste0(out_path, "lca_m", j, ".txt"))
    p_blrt <- as.numeric(strsplit(gsub("\"", "", p_file, fixed = FALSE), ": ", fixed = TRUE)[[1]][2])
  } else {
    if (run_blrt & j > 1) {
      p_blrt <- blrt_lca(vnum = j)
      sink(paste0(out_path, "lca_m", j, ".txt"))
      print(paste0("P value for BLRT: ", p_blrt))
      sink()
    } else {
      p_blrt <- NA
    }
  }
  
  res_j <- data.table(n.class = ncol(mi$posterior), sample.size = mi$Nobs, n.param = mi$npar, loglike = mi$llik, AIC = mi$aic, BIC = mi$bic, SABIC = sabic, entropy = entropy_val, p.blrt = p_blrt,
                      min.post = as.numeric(sum_post[1]), median.post = as.numeric(sum_post[3]), mean.post = as.numeric(sum_post[4]), max.post = as.numeric(sum_post[6]), mean.per.post = paste(round(mean_post, 2), collapse = "|"), min.per.post = min(mean_post),
                      pre.prop = paste(round(pre_prop, 2), collapse = "|"), min.preprop = min(pre_prop), class.prop = paste(round(prop, 2), collapse = "|"), min.prop = min(prop)
  )
  res_lca <- rbind(res_lca, res_j)
}
res_lca
res_lca[, p_lrt:= NA]

for (n in 2:n_end) {
  plrt <- calc_lrt(n = res_lca$sample.size[n], null_ll = res_lca$loglike[n-1], null_param = res_lca$n.param[n-1], null_classes = res_lca$n.class[n-1], alt_ll = res_lca$loglike[n], alt_param = res_lca$n.param[n], alt_classes = res_lca$n.class[n])[4]
  res_lca$p_lrt[n] <- plrt
}
setwd("NAFLD_LCA_FOLD/MAYO_BIOBANK/Journal_Final_Pic")
write.table (res_lca , "res_lca_100.csv", sep="\t", row.names=F, col.names=T, quote=F)

View(res_lca)


### Run poLCA with class 5
mi_start <- poLCAParallel::poLCA(formula = f_lca, data = dat_lca_100, nclass = 5, maxiter = 1000, nrep = 30, graph = FALSE, calc.se = TRUE, verbose = FALSE)
vprobs.start <- poLCA.reorder(mi_start$probs.start, order(mi_start$P, decreasing = TRUE))
lc51 <- poLCAParallel::poLCA(formula = f_lca, data = dat_lca_100, nclass = 5, maxiter = 1000, probs.start = vprobs.start, graph = FALSE, calc.se = TRUE, verbose = FALSE)
lc51$prior

latent_clusters <-lc51$predclass
selected_data_100$LatentClassCluster <- latent_clusters
colnames(selected_data_100)
nrow(selected_data_100)
my.render.cat <- function(x) {
  c("", sapply(stats.default(x), function(y) with(y,
                                                  sprintf("%0.1f", PCT))))
}
selected_data_100$BUN <-as.numeric(selected_data_100$BUN)
selected_data_100$Fibrosis <- as.factor(selected_data_100$Fibrosis)
selected_data_100$Cirrhosis <- as.factor(selected_data_100$Cirrhosis)
selected_data_100$Transplant <- as.factor(selected_data_100$Transplant)
selected_data_100$Steatohepatitis <- as.factor(selected_data_100$Steatohepatitis)
selected_data_100$Hepatocellular <- as.factor(selected_data_100$Hepatocellular)
x <- table1(~+PATIENT_GENDER_NAME+Age+Obesity1+Hyperlipidemia1+MetS1+CVD1+Sleep1+
              Joint1+Depression1+CKD1+Diabetes1+
              BMI_C+A1C_C+ALP_C+AST_C+ALT_C+BUN_C+LDL_C+HDL_C+TG_C+PRS_C5+PRS_C10+PRS_C15+PRS_C68| LatentClassCluster,
            data=selected_data_100, overall=T, render.categorical=my.render.cat, topclass="Rtable1-zebra")
table_column <- selected_data_100[, -c(1:5,7,21,23,25,27,29)]
x <- table1(~.| LatentClassCluster,
            data=table_column, overall=T, render.categorical=my.render.cat, topclass="Rtable1-zebra")
x
tab1_df <- as.data.frame(x)
setwd("NAFLD_LCA_FOLD/MAYO_BIOBANK/Journal_Final_Pic")

write.table (tab1_df , "Bio_After_LCA_100.csv", sep="\t", row.names=F, col.names=T, quote=F)
write.table(selected_data_100, file="T100_5_Tapestry_After_LCA_T2043_clinical_info_06_11.csv", sep="\t", row.names=F, col.names=T, quote=F)

vari_lca

LCA_NAFLD_data_75  <- selected_data_100[-test_index, ]
selected_data_75 <- na.omit(LCA_NAFLD_data_75)
nrow(LCA_NAFLD_data_75)
nrow(selected_data_75)
colnames(selected_data_75)
LCA_data <- selected_data_75[, -c(1:5,7:29,44,48,49,51,61:65)]
colnames(LCA_data)
character_columns <- sapply(LCA_data, is.character)
LCA_data[, character_columns] <- lapply(LCA_data[, character_columns], as.factor)
colnames(LCA_data)
colnames(LCA_data)
dat_lca_75 <- LCA_data[, c(vari_lca)]
colnames(dat_lca_75)
out_path <- "NAFLD_LCA_FOLD/MAYO_BIOBANK/result/"
f_lca <- eval(parse(text = paste0("as.formula(cbind(", paste(vari_lca, collapse = ", "), ") ~ 1)"))) #caus.death * year.diag

n_start <- 1
n_end <- 10
for (i in n_start:n_end) {
  mi_start <-poLCAParallel::poLCA(formula = f_lca, data = dat_lca_75, nclass = i, maxiter = 1000, nrep = 30, graph = FALSE, calc.se = TRUE, verbose = FALSE)
  vprobs.start <- poLCA.reorder(mi_start$probs.start, order(mi_start$P, decreasing = TRUE))
  mi <- poLCAParallel::poLCA(formula = f_lca, data = dat_lca_75, nclass = i, maxiter = 1000, probs.start = vprobs.start, graph = FALSE, calc.se = TRUE, verbose = FALSE)
  save(mi_start, mi, file = paste0(out_path, "lca_m", i, ".RData"))
}

save(dat_lca_75, file = paste0(out_path, "dat_lca_75.RData"))

p_use <- "p_lrt"
vy_thres <- 0.5

### LCA performance
res_lca <- data.table()
for (j in n_start:n_end) {
  load(paste0(out_path, "lca_m", j, ".RData"))
  prop <- table(mi$predclass)/mi$Nobs*100
  pre_prop <- mi$P*100
  
  val_post <- apply(mi$posterior, 1, max)
  sum_post <- summary(val_post)
  if (j == 1) {
    mean_post = 1
  } else {
    dat_post <- data.table(posterior = val_post, class = mi$predclass)
    mean_post <- dat_post[, mean(posterior), by = "class"]$V1
  }
  
  nadj=(mi$Nobs+2)/24
  sabic = -2 * mi$llik + mi$npar * log(nadj)
  
  entropy<-function (p) sum(-p*log(p))
  error_prior<-entropy(mi$P) # class proportions model 2
  error_post<-mean(apply(mi$posterior ,1, entropy),na.rm = TRUE)
  entropy_val<-round(((error_prior-error_post) / error_prior),3)
  
  if (file.exists(paste0(out_path, "lca_m", j, ".txt"))) {
    p_file <- readLines(paste0(out_path, "lca_m", j, ".txt"))
    p_blrt <- as.numeric(strsplit(gsub("\"", "", p_file, fixed = FALSE), ": ", fixed = TRUE)[[1]][2])
  } else {
    if (run_blrt & j > 1) {
      p_blrt <- blrt_lca(vnum = j)
      sink(paste0(out_path, "lca_m", j, ".txt"))
      print(paste0("P value for BLRT: ", p_blrt))
      sink()
    } else {
      p_blrt <- NA
    }
  }
  
  res_j <- data.table(n.class = ncol(mi$posterior), sample.size = mi$Nobs, n.param = mi$npar, loglike = mi$llik, AIC = mi$aic, BIC = mi$bic, SABIC = sabic, entropy = entropy_val, p.blrt = p_blrt,
                      min.post = as.numeric(sum_post[1]), median.post = as.numeric(sum_post[3]), mean.post = as.numeric(sum_post[4]), max.post = as.numeric(sum_post[6]), mean.per.post = paste(round(mean_post, 2), collapse = "|"), min.per.post = min(mean_post),
                      pre.prop = paste(round(pre_prop, 2), collapse = "|"), min.preprop = min(pre_prop), class.prop = paste(round(prop, 2), collapse = "|"), min.prop = min(prop)
  )
  res_lca <- rbind(res_lca, res_j)
}
res_lca
res_lca[, p_lrt:= NA]

for (n in 2:n_end) {
  plrt <- calc_lrt(n = res_lca$sample.size[n], null_ll = res_lca$loglike[n-1], null_param = res_lca$n.param[n-1], null_classes = res_lca$n.class[n-1], alt_ll = res_lca$loglike[n], alt_param = res_lca$n.param[n], alt_classes = res_lca$n.class[n])[4]
  res_lca$p_lrt[n] <- plrt
}
fwrite(res_lca, file = paste0(out_path, "res_lca_75.csv"))
View(res_lca)
setwd("NAFLD_LCA_FOLD/MAYO_BIOBANK/Journal_Final_Pic")
write.table (res_lca , "res_lca_75.csv", sep="\t", row.names=F, col.names=T, quote=F)
#result <-  read.csv ("result/res_lca_75.csv", sep=",", header=TRUE)
colnames(LCA_data)

#install.packages("BranchGLM",lib="/research/bsi/projects/staff_analysis/m310654/R4_Rlib2022")
### Run poLCA with class 5
f_lca
mi_start <- poLCAParallel::poLCA(formula = f_lca, data = dat_lca_75, nclass = 5, maxiter = 1000, nrep = 30, graph = FALSE, calc.se = TRUE, verbose = FALSE)
vprobs.start <- poLCA.reorder(mi_start$probs.start, order(mi_start$P, decreasing = TRUE))
lc5 <-poLCAParallel::poLCA(formula = f_lca, data = dat_lca_75, nclass = 5, maxiter = 1000, probs.start = vprobs.start, graph = FALSE, calc.se = TRUE, verbose = FALSE)
lc5

latent_clusters <-lc5$predclass
selected_data_75$LatentClassCluster <- latent_clusters
selected_data_75$BUN <-as.numeric(selected_data_75$BUN)
colnames(selected_data_75)
selected_data_75$Fibrosis <- as.factor(selected_data_75$Fibrosis)
selected_data_75$Cirrhosis <- as.factor(selected_data_75$Cirrhosis)
selected_data_75$Transplant <- as.factor(selected_data_75$Transplant)
selected_data_75$Steatohepatitis <- as.factor(selected_data_75$Steatohepatitis)
selected_data_75$Hepatocellular <- as.factor(selected_data_75$Hepatocellular)
table_column <- selected_data_75[, -c(1:5,7,21,23,25,27,29)]
x <- table1(~.| LatentClassCluster,
            data=table_column, overall=T, render.categorical=my.render.cat, topclass="Rtable1-zebra")
x


tab1_df <- as.data.frame(x)
View(tab1_df)
setwd("NAFLD_LCA_FOLD/MAYO_BIOBANK/Journal_Final_Pic")

write.table (tab1_df , "Bio_After_LCA_75.csv", sep="\t", row.names=F, col.names=T, quote=F)

write.table(selected_data_75, file="T75_5_Bio_After_LCA_T1533_clinical_info_06_10.csv", sep="\t", row.names=F, col.names=T, quote=F)




